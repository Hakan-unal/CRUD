{
    "title1": "What Is CRUD ?",
    "title2": "Examples",
    "title3": "Explanation",
    "paragraph1": "CRUD refers to the 4 basic operations performed on the data. These basic operations are create, read, update and delete respectively. Whether SQL or NoSQL, these http methods are used to add or remove records on the database or to edit the added records. Considering that the server is the bridge between the frontend and the database, it is clear that it can establish a meaningful relationship with each other through these methods. It is clear that the post method from the frontend is a registration process that carries payload for the person who develops on the server-side side. Although it is possible to mix CRUD on the basis of REST architecture, we can say that CRUD is the theoretical set of more basic operations and REST can be built on it.",
    "paragraph2": "Assume that you have a product table on the database and that you are running the operations of this table via /api/product on the backend, and your front-end form has name, description and price fields. When the form submit process is completed, the relevant functions are completed and you have sent your payload to the /api/product path to the backend with the post method, from which point the backend meets your payload and creates the data from the form on the database as a new record.",
    "paragraph3": "The Create Part of CRUD, POST adds information on the server.",
    "paragraph4": "The Read Part of CRUD, GET requests information from the server, which is usually displayed.",
    "paragraph5": "The Update Part of CRUD, PUT also updates the server, but in a more specific manner than POST. ",
    "paragraph6": "The Delete Part of CRUD, As its name suggests, DELETE removes data from the server. It, too, is like a more specific POST request. It does not add any new information and simply removes the specified data. ",
    "paragraph7": "Let the id of the data you create be 1 and you want to show this data on the frontend. At this point, you can bring the relevant data in the table to the frontend by the backend with the /api/product/1 pathine get method.",
    "paragraph8": "You have shown the data with id of 1 on the frontend and you want to update the description field in it. At this point, when you submit your form and send it with your payload to the /api/product/1 path with the put method, you can update the relevant data.",
    "paragraph9": "Likewise, when we want to delete the data with an id of 1, when you send a request to the /api/product/1 path with the delete method, the data with an id of 1 on the backend is deleted from the product table."
}
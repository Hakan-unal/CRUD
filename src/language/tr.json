{
    "title1": "CRUD Nedir ?",
    "title2": "Örnekler",
    "title3": "Açıklama",
    "paragraph1": "CRUD veri üzerinde yapılan 4 temel işlemi ifade eder. Bu temel işlemler sırasıyla create, read, update ve delete'tir. SQL veya NoSQL olsun veritabanı üzerinde kayıt ekleyip çıkartmak veya eklenen kayıtları düzenlemek için bu http methodları kullanılır. Server'ın önyüz ve veritabanı arasındaki köprü olduğunu düşünürsek bu methodlar aracılığıyla birbirleriyle anlamlı bir ilişki kurabildiği açıktır. Önyüz tarafından gelen post methodu server-side tarafında geliştirme yapan kişi için de bunun genel hatlarıyla içerisinde payload taşıyan bir kayıt işlemi olduğu açıktır. REST mimarisi temelinde CRUD'u karıştırmak mümkün olmakla birlikte CRUD daha temel işlemlerin teorik bütünü diyebiliriz ve REST bunun üzerine inşa edilebilir.",
    "paragraph2": "Veritabanı üzerinde product tablonuz olsun ve bu tabloya ait işlemleri backend tarafında /api/product üzerinden yürüttüğünüzü varsayın ve önyüzde bulunan formunuzda name, description ve price alanları bulunsun. Form submit işlemi gerçekleştiğinde ilgili fonksiyonlar tamamlandı ve backend tarafına /api/product pathine payloadınızı post methoduyla gönderdiniz bu noktadan sonraki süreçte backend sizin payloadınızı karşılar ve veritabanı üzerine formdan gelen veriyi yeni kayıt olarak oluşturur.",
    "paragraph3": "CREATE: Http methodu olarak POST'tur. Server tarafına bilgi eklemek için kullanılan istektir.",
    "paragraph4": "READ: Http methodu olarak GET'tir. Server tarafından bilgi çağırmak için kullanılan istektir.",
    "paragraph5": "UPDATE: Http methodu olarak PUT'tur. Server tarafından var olan bilgiyi güncellemek için kullanılan istektir.",
    "paragraph6": "DELETE: Http methodu olarak DELETE'tir. Server tarafından var olan bilgiyi silmek için kullanılan istektir.",
    "paragraph7": "Oluşturduğunuz verinin id'si 1 olsun ve siz önyüzde bu veriyi göstermek istiyorsunuz. Bu noktada /api/product/1 pathine get methoduyla backend tarafından tablodaki ilgili datayı önyüze getirebilirsiniz.",
    "paragraph8": "İd'si 1 olan veriyi önyüzde gösterdiniz ve içerisinde yer alan description alanını güncellemek istiyorsunuz. Bu noktada formunuzu submit edip payloadınızla birlikte /api/product/1 pathine put methoduyla gönderdiğinizde ilgili veriyi güncelleme işlemi yürütebilirsiniz.",
    "paragraph9": "Aynı şekilde id'si 1 olan veriyi silmek istediğimizde /api/product/1 pathine delete methoduyla istek gönderdiğinizde backend tarafında id'si 1 olan verinin product tablosundan silinmesi işlemi gerçekleşir."
}